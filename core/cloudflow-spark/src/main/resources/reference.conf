akka {
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8

    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and parallelism-max values.
    parallelism-factor = 3.0

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 32

    # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
    # like peeking mode which "pop".
    task-peeking-mode = "FIFO"
  }

}

cloudflow {
  runner {
    bind-interface = "0.0.0.0"
    bind-port = 9471
    bind-port = ${?PIPELINES_RUNNER_ADMIN_PORT}
  }
  # See https://spark.apache.org/docs/2.2.0/structured-streaming-kafka-integration.html
  # Rate limit on maximum number of offsets processed per trigger interval. 
  # The specified total number of offsets will be proportionally split across topicPartitions of different volume.
  # The default is set to a conservative number to prevent Out of Memory exceptions when stream processing
  # is far behind on available data in Kafka.
  spark.read.options.max-offsets-per-trigger = 500000 
  spark.read.options.max-offsets-per-trigger = ${?PIPELINES_SPARK_READ_OPTIONS_MAX_OFFSETS_PER_TRIGGER}
}

# Turn off stack dumps produced by reactive kafka
akka.kafka.consumer.wakeup-debug = false
